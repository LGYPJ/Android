<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="342dp"
        android:layout_height="392dp"
        android:background="@drawable/dialog_seminar_preview"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:background="@drawable/dialog_seminar_preview_blue"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"/>

    <androidx.appcompat.widget.AppCompatImageView
        android:id="@+id/dialog_fragment_seminar_close_btn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="9dp"
        android:layout_marginTop="4dp"
        android:src="@drawable/ic_seminar_close_34dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>


    <FrameLayout
        android:id="@+id/dialog_seminar_profile_frame"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="40dp"
        android:layout_marginStart="15dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent">

        <androidx.appcompat.widget.AppCompatImageView
            android:id="@+id/dialog_seminar_profile_border"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:src="@drawable/dialog_seminar_present_preview_profile_border" />
        <androidx.cardview.widget.CardView
            android:id="@+id/dialog_seminar_seminar_profile_card"
            android:layout_width="78dp"
            android:layout_height="78dp"
            android:background="@color/white"
            android:layout_gravity="center"
            app:cardCornerRadius="50dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">
            <androidx.appcompat.widget.AppCompatImageView
                android:id="@+id/dialog_seminar_profile_img"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:src="@drawable/activity_seminar_present_profile1_img"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                />
        </androidx.cardview.widget.CardView>


    </FrameLayout>

    <TextView
        android:id="@+id/dialog_fragment_seminar_name_tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="네온"
        android:textSize="16sp"
        android:textColor="@color/black"
        android:textStyle="bold"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_seminar_profile_frame"/>
    <TextView
        android:id="@+id/dialog_fragment_seminar_job_tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="재학생"
        android:textSize="16sp"
        android:textColor="@color/black"
        android:layout_marginStart="4dp"
        app:layout_constraintStart_toEndOf="@+id/dialog_fragment_seminar_name_tv"
        app:layout_constraintTop_toTopOf="@+id/dialog_fragment_seminar_name_tv"
        app:layout_constraintBottom_toBottomOf="@+id/dialog_fragment_seminar_name_tv"/>

    <TextView
        android:id="@+id/dialog_fragment_seminar_title_tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="docker에 대해 알아보자"
        android:textColor="@color/black80"
        android:textStyle="bold"
        android:textSize="20dp"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_name_tv"/>

    <TextView
        android:id="@+id/dialog_fragment_seminar_content_tv"
        android:layout_width="290dp"
        android:layout_height="99dp"
        android:text="함수형의 '함' 자도 몰랐던 저는 함수형 프로그래밍과 ReScript를 처음 접했을 때 어렵게만 느껴졌습니다. 어떤 부분이 생소했는지, 달랐는지, ReScript의 안전하고 명료한 코드 작성의 매력에 어쩌다 빠지게 되었는지 얘기해 보려 합니다."
        android:textSize="14sp"
        android:layout_marginStart="16dp"
        android:textColor="@color/black"
        android:layout_marginTop="10dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_title_tv"/>

    <TextView
        android:id="@+id/dialog_fragment_seminar_present_reference_tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="발표자료"
        android:textColor="@color/black"
        android:textSize="14sp"
        android:textStyle="bold"
        android:layout_marginTop="16dp"
        android:layout_marginStart="16dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_content_tv"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="링크링크링크"
        android:textColor="@color/black"
        android:textSize="14sp"
        android:layout_marginTop="4dp"
        android:layout_marginStart="16dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_present_reference_tv"/>





    <!--<TextView
        android:id="@+id/dialog_fragment_seminar_title_tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="docker에 대해 알아보자"
        android:textColor="@color/black"
        android:textStyle="bold"
        android:textSize="20dp"
        android:layout_marginTop="21dp"
        android:background=""
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>


    
    <TextView
        android:id="@+id/dialog_fragment_seminar_content_tv"
        android:layout_width="290dp"
        android:layout_height="99dp"
        android:text="함수형의 '함' 자도 몰랐던 저는 함수형 프로그래밍과 ReScript를 처음 접했을 때 어렵게만 느껴졌습니다. 어떤 부분이 생소했는지, 달랐는지, ReScript의 안전하고 명료한 코드 작성의 매력에 어쩌다 빠지게 되었는지 얘기해 보려 합니다."
        android:textSize="14sp"
        android:textColor="@color/black80"
        android:layout_marginTop="22dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_title_tv"/>

    <TextView
        android:id="@+id/dialog_fragment_seminar_present_reference_tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="발표자료"
        android:textColor="@color/black80"
        android:textSize="14sp"
        android:textStyle="bold"
        android:layout_marginTop="39dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_content_tv"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="링크링크링크"
        android:textColor="@color/black80"
        android:textSize="14sp"
        android:layout_marginTop="13dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dialog_fragment_seminar_present_reference_tv"/>-->


    </androidx.constraintlayout.widget.ConstraintLayout>

</androidx.constraintlayout.widget.ConstraintLayout>